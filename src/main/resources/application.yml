spring:
  datasource:
    url: jdbc:mysql://127.0.0.1/iam_service?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: choerodon
    password: 123456
  redis:
    host: localhost
    port: 6379
    database: 4
    lettuce:
      shutdown-timeout: 200ms
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 2
        max-wait: -1ms
  cache:
    multi:
      l1:
        enabled: true # 是否开启一级缓存
        type: caffeine # 一级缓存实现。目前支持caffeine和guava
      l2:
        enabled: false # 是否开启二级缓存
        type: redis # 二级缓存的实现
      caches:
        permission: # 请求对应的权限缓存
          l1-spec: initialCapacity=50,maximumSize=500,expireAfterWrite=600s
          l2-spec: expiration=600
choerodon:
  helper:
    jwt-key: choerodon # jwt的密钥
    oauth-info-uri: http://oauth-server/oauth/api/user # oauth获取userDetail地址
    permission:
      enabled: true # 是否开启权限校验
      skip-paths: /**/skip/**, /oauth/**,/prometheus,/health,/env,/metrics,/favicon.ico # 跳过权限校验路径
      cache-seconds: 600 # 请求地址和对应的权限缓存时间
      cache-size: 3000  # 请求地址和对应的权限缓存大小
mybatis:
  mapperLocations: classpath*:/mapper/*.xml
  configuration:
    mapUnderscoreToCamelCase: true
zuul:
  addHostHeader: true
  routes:
    event:
      path: /event/**
      serviceId: event-store-service
      helperService: gateway-helper
    devops:
      path: /devops/**
      serviceId: devops-service
    iam:
      path: /iam/**
      serviceId: iam-service
    oauth:
      path: /oauth/**
      sensitiveHeaders:
      serviceId: oauth-server
      stripPrefix: false
    notify:
      path: /notify/**
      serviceId: notify-service
    manager:
      path: /manager/**
      serviceId: manager-service
    file:
      path: /file/**
      serviceId: file-service
    org:
      path: /org/**
      serviceId: organization-service
    asgard:
      path: /asgard/**
      serviceId: asgard-service
  semaphore:
    max-semaphores: 300
  sensitiveHeaders: Cookie,Set-Cookie
eureka:
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30
  client:
    serviceUrl:
      defaultZone: http://localhost:8000/eureka/
    registryFetchIntervalSeconds: 10
    disable-delta: true
ribbon:
  httpclient:
    enabled: false
  okhttp:
    enabled: true
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000
security:
  oauth2:
    client:
      grant-type: client_credentials
    resource:
      userInfoUri: http://oauth-server/oauth/api/user
logging:
  level:
    com.netflix.discovery.DiscoveryClient: warn

